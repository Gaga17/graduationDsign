<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="study.cjj.eloan.base.mapper.UserFileMapper" >
  <resultMap id="BaseResultMap" type="study.cjj.eloan.base.domain.UserFile" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="auditTime" property="audittime" jdbcType="TIMESTAMP" />
    <result column="applyTime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="score" property="score" jdbcType="TINYINT" />
    <result column="file" property="file" jdbcType="VARCHAR" />
    
    <association property="applier" columnPrefix="ap_"
			javaType="study.cjj.eloan.base.domain.LoginInfo">
			<id column="id" property="id" />
			<result column="username" property="username" />
		</association>
		<association property="auditor" columnPrefix="au_"
			javaType="study.cjj.eloan.base.domain.LoginInfo">
			<id column="id" property="id" />
			<result column="username" property="username" />
		</association>
		<association property="fileType" javaType="study.cjj.eloan.base.domain.SystemDictionaryItem" columnPrefix="ft_">
		<id column="id" property="id"/>
		<result column="title" property="title"/>
	</association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from userfile
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="study.cjj.eloan.base.domain.UserFile" useGeneratedKeys="true" keyProperty="id" >
    insert into userfile (state, remark, auditTime, 
      applyTime, auditor_id, applier_id, 
      score, file, filetype_id
      )
    values (#{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{audittime,jdbcType=TIMESTAMP}, 
      #{applytime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=BIGINT}, #{applierId,jdbcType=BIGINT}, 
      #{score,jdbcType=TINYINT}, #{file,jdbcType=VARCHAR}, #{filetypeId,jdbcType=BIGINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="study.cjj.eloan.base.domain.UserFile" >
    update userfile
    set state = #{state,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      auditTime = #{audittime,jdbcType=TIMESTAMP},
      applyTime = #{applytime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=BIGINT},
      applier_id = #{applierId,jdbcType=BIGINT},
      score = #{score,jdbcType=TINYINT},
      file = #{file,jdbcType=VARCHAR},
      filetype_id = #{filetypeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, state, remark, auditTime, applyTime, auditor_id, applier_id, score, file, 
    filetype_id
    from userfile
  </select>
  
 <sql id="base_column">
  	f.id, f.state, f.remark, f.auditTime, f.applyTime,  f.score, f.image,
  	au.id as au_id ,au.username as au_username ,
  	ap.id as ap_id ,ap.username as ap_username ,
  	ft.id as ft_id , ft.title as ft_title 
  </sql>
  <sql id="base_table">
  	userfile f JOIN logininfo ap ON ap.id = f.applier_id 
    			    LEFT JOIN logininfo au  ON au.id = f.auditor_id
    			    LEFT JOIN systemdictionaryitem ft ON  ft.id = f.fileType_id
  </sql>
  
   <sql id="condition">
	  <where>
	  	<if test="state>-1">
	  		AND f.state = #{state} 
	  	</if>
	  	<if test="applierId!=null">
	  		AND f.applier_id = #{applierId} 
	  	</if>
	  	<if test="beginDate!=null">
	  		AND f.applyTime &gt;= #{beginDate}
	  	</if>
	  	<if test="endDate!=null">
	  		AND f.applyTime &lt;= #{endDate}
	  	</if>
	  	AND  f.fileType_id IS NOT NULL 		
	  </where>
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select <include refid="base_column" />
    from <include refid="base_table" />
     where f.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectUserFileList" resultMap="BaseResultMap">
  	select <include refid="base_column" />
  	from <include refid="base_table" /> 
  	 where f.applier_id = #{logininfoId} 
  	 <if test="noType">
  	 AND  f.fileType_id IS NULL 
  	 </if>
  	 <if test="!noType">
  	 AND  f.fileType_id IS NOT NULL 
  	 </if>
  </select>
  
  <select id="queryForCount" resultType="int">
	select count(f.id) 
	FROM userfile f
	<include refid="condition" />
  </select>
  
  <select id="query" resultMap="BaseResultMap">
  	select <include refid="base_column" />
  	from <include refid="base_table" />
    <include refid="condition" />
    <if test="pageSize>0">
    LIMIT #{start} , #{pageSize}
    </if>
  </select>
  
</mapper>